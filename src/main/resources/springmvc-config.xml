<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           https://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!--扫描controller与interceptor-->
  <context:component-scan base-package="com.greatgump.crm.controller,com.greatgump.crm.exception,com.greatgump.crm.config"></context:component-scan>

  <!--开启注解-->
  <mvc:annotation-driven/>

  <!--跨域-->
  <mvc:cors>
    <mvc:mapping path="/**"
      allowed-origin-patterns="*"
      allowed-methods="*"
      allowed-headers="Content-Type,Access-Control-Allow-Headers,Authorization,X-Requested-with,token,*"
      allow-credentials="true"/>
  </mvc:cors>
  <!--配置了生命周期的后置处理器，作用是调用IOC容器中的shiro bean的生命周期方法-->
  <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
  &lt;!&ndash;启用了IOC容器中使用shiro的注解，但必须在配置了LifecycleBeanPostProcessor之后才能使用 &ndash;&gt;
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
    depends-on="lifecycleBeanPostProcessor"/>-->

  <!--    静态资源的映射-->

  <!--    swagger的静态资源-->
  <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
<!--       <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>-->
  <mvc:resources location="classpath:/META-INF/resources/" mapping="doc.html"/>
  <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>

  <!-- 定义文件上传解析器 -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 设定默认编码 -->
      <property name="defaultEncoding" value="UTF-8"/>
      <!-- 设定文件上传的最大值为5MB，5*1024*1024 -->
      <property name="maxUploadSize" value="5242880"/>
      <!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 -->
      <property name="maxInMemorySize" value="40960"/>
      <!-- 延迟文件解析 -->
      <property name="resolveLazily" value="true"/>
  </bean>
</beans>